#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  # release:
  #   types: [published]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/host ./build_dir/host
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h

      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

	  cat >> .config << EOF
	  CONFIG_TARGET_brcm2708=y
	  CONFIG_TARGET_brcm2708_bcm2710=y
	  CONFIG_TARGET_MULTI_PROFILE=y
	  CONFIG_TARGET_DEVICE_brcm2708_bcm2710_DEVICE_rpi-3=y
	  CONFIG_TARGET_DEVICE_PACKAGES_brcm2708_bcm2710_DEVICE_rpi-3=y
 	  CONFIG_ALL_KMODS=y
	  CONFIG_ALL_NONSHARED=y
	  CONFIG_DEVEL=y
	  CONFIG_TARGET_PER_DEVICE_ROOTFS=y
	  CONFIG_AUTOREMOVE=y
	  CONFIG_BUILDBOT=y
	  CONFIG_IB=y
	  CONFIG_IMAGEOPT=y
	  CONFIG_KERNEL_BUILD_DOMAIN="buildhost"
	  CONFIG_KERNEL_BUILD_USER="builder"
	  # CONFIG_KERNEL_KALLSYMS is not set
	  CONFIG_PACKAGE_cgi-io=y
	  CONFIG_PACKAGE_libiwinfo=y
	  CONFIG_PACKAGE_libiwinfo-lua=y
	  CONFIG_PACKAGE_liblua=y
	  CONFIG_PACKAGE_liblucihttp=y
	  CONFIG_PACKAGE_liblucihttp-lua=y
	  CONFIG_PACKAGE_libubus-lua=y
	  CONFIG_PACKAGE_lua=y
	  CONFIG_PACKAGE_luci=y
    	  CONFIG_PACKAGE_luci-theme-argon=y
    	  CONFIG_PACKAGE_luci-theme-netgear=y
	  CONFIG_PACKAGE_luci-app-firewall=y
	  CONFIG_PACKAGE_luci-app-opkg=y
    	  CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
    	  CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
    	  CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
    	  CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
    	  CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
	  CONFIG_PACKAGE_luci-base=y
	  CONFIG_PACKAGE_luci-lib-ip=y
	  CONFIG_PACKAGE_luci-lib-jsonc=y
	  CONFIG_PACKAGE_luci-lib-nixio=y
	  CONFIG_PACKAGE_luci-mod-admin-full=y
	  CONFIG_PACKAGE_luci-mod-network=y
	  CONFIG_PACKAGE_luci-mod-status=y
	  CONFIG_PACKAGE_luci-mod-system=y
	  CONFIG_PACKAGE_luci-proto-ipv6=y
	  CONFIG_PACKAGE_luci-proto-ppp=y
	  CONFIG_PACKAGE_luci-theme-bootstrap=y
	  CONFIG_PACKAGE_rpcd=y
	  CONFIG_PACKAGE_rpcd-mod-file=y
	  CONFIG_PACKAGE_rpcd-mod-iwinfo=y
	  CONFIG_PACKAGE_rpcd-mod-luci=y
	  CONFIG_PACKAGE_rpcd-mod-rrdns=y
	  CONFIG_PACKAGE_uhttpd=y
	  CONFIG_SDK=y
	  CONFIG_TARGET_ALL_PROFILES=y
	  CONFIG_VERSIONOPT=y
	  CONFIG_VERSION_BUG_URL=""
	  CONFIG_VERSION_CODE=""
	  CONFIG_VERSION_DIST="OpenWrt"
	  CONFIG_VERSION_FILENAMES=y
	  CONFIG_VERSION_HOME_URL=""
	  CONFIG_VERSION_HWREV=""
	  CONFIG_VERSION_MANUFACTURER=""
	  CONFIG_VERSION_MANUFACTURER_URL=""
	  CONFIG_VERSION_NUMBER=""
	  CONFIG_VERSION_PRODUCT=""
	  # CONFIG_VERSION_REPO="http://downloads.openwrt.org/releases/19.07.1"
	  CONFIG_VERSION_SUPPORT_URL=""
	  # CONFIG_COLLECT_KERNEL_DEBUG is not set
	  EOF

          # 
          # ========================固件定制部分结束========================
          # 

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find ./dl/ -size -1024c -exec rm -f {} \;
          df -h

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: ./bin/targets/
